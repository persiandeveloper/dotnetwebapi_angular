{"version":3,"sources":["./src/app/subject/subject.component.ts","./src/app/subject/subject.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/student/student.component.ts","./src/app/student/student.component.html","./src/app/course/course.component.ts","./src/app/course/course.component.html","./src/app/teacher/teacher.component.ts","./src/app/teacher/teacher.component.html","./src/app/grade/grade.component.ts","./src/app/grade/grade.component.html","./src/app/api-srevice.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport HttpService from '../api-srevice';\nimport { Course, Subject, Teacher } from '../models/teacher-model';\n\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectComponent implements OnInit {\n\n  subjects : Subject[];\n\n  courses: Course[];\n  teachers: Teacher[];\n\n\n  selectecCourse : number;\n\n  selectecTeacher : number;\n\n\n  constructor(private service: HttpService) { }\n\n  ngOnInit(): void {\n    this.refresh();\n    this.getCourses();\n    this.getTeachers();\n  }\n\n  getCourses(){\n    this.service.getAllCourses().subscribe(r => {\n     \n      this.courses = r;\n    });\n  }\n\n  getTeachers(){\n    this.service.getAllTeachers().subscribe(r => {\n     \n      this.teachers = r;\n    });\n  }\n\n  saveNew(){\n    if(this.selectecCourse && this.selectecTeacher){\n      this.service.saveNewSubject(this.selectecCourse, this.selectecTeacher).subscribe(r => {\n     \n        this.refresh();\n  \n      });\n    }\n    \n  }\n\n  delete(item : Subject){\n    this.service.deleteSubject(item.id).subscribe(r=> this.refresh());\n\n  }\n\n  refresh(){\n    this.service.getAllSubjects().subscribe(r => {\n     \n      this.subjects = r;\n    });\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 70px;\">\n\n    <form class=\"text-center border border-light p-5\">\n        <label class=\"form-label\">Course:</label>\n        <select class=\"ml-2 form-select form-select-lg\" name=\"selectedCourse\" [(ngModel)]=\"selectecCourse\">\n            <option *ngFor=\"let c of courses\" [value]=\"c.id\">{{c.name}}</option>\n         </select>`\n\n         <label class=\"form-label\">Teacher:</label>\n         <select class=\"ml-2 form-select form-select-lg\" name=\"selectedTeacher\" [(ngModel)]=\"selectecTeacher\">\n             <option *ngFor=\"let c of teachers\" [value]=\"c.id\">{{c.name}}</option>\n          </select>\n\n          <button mdbBtn color=\"info\"  (click)=\"saveNew()\" block=\"true\" class=\"ml-2 my-4\">\n             Add\n        </button>\n\n    </form>\n\n    <table class=\"table table-hover\">\n        <thead>\n            <tr>\n                <th>#</th>\n                <th>Course</th>\n                <th>Teacher</th>\n                <th>Students</th>\n                <th>Average</th>\n                <th></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of subjects; index as i;\">\n                <th>{{i+1}}</th>\n                <td>{{item.course}}</td>\n                <td>{{item.teacher}}</td>\n                <td>{{item.students}}</td>\n                <td>{{item.average}}</td>\n                <td><button (click)=\"delete(item)\">Delete</button></td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"text-center\">\n    <h1>Choose A Part To Start</h1>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api : \"https://localhost:44364/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport HttpService from './api-srevice';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private httpService: HttpService) {}\n\n  title = 'Angular';\n}\n","<div class=\"container text-center\">\n    <button routerLink=\"/Teacher\" routerLinkActive=\"btn-primary\" type=\"button\" class=\"btn btn-outline-primary\">Teachers</button>\n    <button routerLink=\"/Student\" routerLinkActive=\"btn-primary\" type=\"button\" class=\"btn btn-outline-primary\">Students</button>\n    <button routerLink=\"/Courses\" routerLinkActive=\"btn-primary\" type=\"button\" class=\"btn btn-outline-primary\">Courses</button>\n    <button routerLink=\"/Subjects\" routerLinkActive=\"btn-primary\" type=\"button\" class=\"btn btn-outline-primary\">Subjects</button>\n    <button routerLink=\"/Grades\"  routerLinkActive=\"btn-primary\" type=\"button\" class=\"btn btn-outline-primary\">Grades</button>\n</div>\n\n\n\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { TeacherComponent } from './teacher/teacher.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport HttpService from './api-srevice';\nimport { StudentComponent } from './student/student.component';\nimport { HomeComponent } from './home/home.component';\nimport { CourseComponent } from './course/course.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { GradeComponent } from './grade/grade.component';\n\nimport { FormsModule } from '@angular/forms'; \n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TeacherComponent,\n    StudentComponent,\n    HomeComponent,\n    CourseComponent,\n    SubjectComponent,\n    GradeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    NoopAnimationsModule\n  ],\n  providers: [\n    HttpService,\n    {provide: APP_BASE_HREF, useValue: '/'}\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport HttpService from '../api-srevice';\nimport { Student } from '../models/teacher-model';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  students : Student[];\n\n  student: Student = {name  : \"\", id : null};\n\n  updateMode: boolean = false;\n\n  constructor(private service: HttpService) { }\n\n  ngOnInit(): void {\n   this.refresh();\n  }\n\n  saveNew() {\n    this.service.saveStudent(this.student).subscribe(r => {\n      this.student =  {name  : \"\", id : null};\n      this.updateMode = false;\n      this.refresh();\n    })\n  }\n\n  enableUpdate(item: Student) {\n    this.student = item;\n    this.updateMode= true;\n  }\n\n  delete(item: Student){\n    this.service.deleteStudent(item.id).subscribe(r=> this.refresh());\n  }\n\n\n  refresh(){\n    this.service.getAllStudents().subscribe(r => {\n     \n      this.students = r;\n    });\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 70px;\"> <div>\n    <form class=\"text-center border border-light p-5\">\n\n        <p class=\"h4 mb-4\">Add / Edit Student</p>\n\n        <input type=\"text\" name=\"name\" [(ngModel)]=\"student.name\" class=\"form-control mb-4\" placeholder=\"Name\">\n\n        <button mdbBtn color=\"info\" (click)=\"saveNew()\" block=\"true\" class=\"my-4\">\n            <ng-template [ngIf]=\"updateMode\">\n                Update\n            </ng-template>\n            <ng-template [ngIf]=\"!updateMode\">\n                Add\n            </ng-template>\n        </button>\n\n\n    </form>\n</div>\n    <table class=\"table table-hover\">\n        <thead>\n            <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th></th>\n                <th></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of students; index as i;\">\n                <th>{{i+1}}</th>\n                <td>{{item.name}}</td>\n                <td><button (click)=\"enableUpdate(item)\">Update</button></td>\n                <td><button (click)=\"delete(item)\">Delete</button></td>\n\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport HttpService from '../api-srevice';\nimport { Course } from '../models/teacher-model';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n\n  courses : Course[];\n\n  course : Course = { average: \"\", name: \"\" , id : null, students : null, teachers : null};\n\n\n  updateMode: boolean = false;\n\n\n  constructor(private service: HttpService) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  saveNew() {\n    this.service.saveCourse(this.course).subscribe(r => {\n      this.course = { average: \"\", name: \"\" , id : null, students : null, teachers : null};\n      this.updateMode = false;\n      this.refresh();\n    })\n  }\n\n  enableUpdate(item: Course) {\n    this.course = item;\n    this.updateMode= true;\n  }\n\n  delete(item: Course){\n    this.service.deleteCourse(item.id).subscribe(r=> this.refresh());\n  }\n\n  refresh() {\n    this.service.getAllCourses().subscribe(r => {\n     \n      this.courses = r;\n    });\n  }\n}\n","<div class=\"container\" style=\"margin-top: 70px;\">\n\n    <div>\n        <form class=\"text-center border border-light p-5\">\n\n            <p class=\"h4 mb-4\">Add Course</p>\n\n            <input type=\"text\" name=\"name\" [(ngModel)]=\"course.name\" class=\"form-control mb-4\" placeholder=\"Name\">\n\n            <button mdbBtn color=\"info\" (click)=\"saveNew()\" block=\"true\" class=\"my-4\">\n                <ng-template [ngIf]=\"updateMode\">\n                    Update\n                </ng-template>\n                <ng-template [ngIf]=\"!updateMode\">\n                    Add\n                </ng-template>\n            </button>\n\n\n        </form>\n    </div>\n\n    <table class=\"table table-hover\">\n        <thead>\n            <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Teachers</th>\n                <th>Students</th>\n                <th>Average</th>\n                <th></th>\n                <th></th>\n\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of courses; index as i;\">\n                <th>{{i+1}}</th>\n                <td>{{item.name}}</td>\n                <td>{{item.teachers}}</td>\n                <td>{{item.students}}</td>\n                <td>{{item.average}}</td>\n                <td><button (click)=\"enableUpdate(item)\">Update</button></td>\n                    <td><button (click)=\"delete(item)\">Delete</button></td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport HttpService from '../api-srevice';\nimport { Teacher } from '../models/teacher-model';\n\n@Component({\n  selector: 'app-teacher',\n  templateUrl: './teacher.component.html',\n  styleUrls: ['./teacher.component.css']\n})\nexport class TeacherComponent implements OnInit {\n\n  teachers: Teacher[];\n\n  teacher: Teacher = { name: \"\", id: null, birthDate: \"\" };\n\n  updateMode: boolean = false;\n\n  constructor(private service: HttpService) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  saveNew() {\n    this.service.saveTeacher(this.teacher).subscribe(r => {\n      this.teacher = { name: \"\", id: null, birthDate: \"\" };\n      this.updateMode = false;\n      this.refresh();\n    })\n  }\n\n  enableUpdate(item: Teacher) {\n    this.teacher = item;\n    this.updateMode= true;\n  }\n\n  delete(item: Teacher){\n    this.service.deleteTeacher(item.id).subscribe(r=> this.refresh());\n  }\n\n  refresh() {\n    this.service.getAllTeachers().subscribe(r => {\n\n      this.teachers = r;\n      console.log(this.teachers);\n    });\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 70px;\">\n    <div>\n        <form class=\"text-center border border-light p-5\">\n\n            <p class=\"h4 mb-4\">Add / Edit Teacher</p>\n\n            <!-- Email -->\n            <input type=\"text\" name=\"name\" [(ngModel)]=\"teacher.name\" class=\"form-control mb-4\" placeholder=\"Name\">\n\n            <!-- Password -->\n            <input ype=\"text\" name=\"birthDate\" [(ngModel)]=\"teacher.birthDate\" class=\"form-control mb-4\"\n                placeholder=\"birthday\">\n\n\n\n            <!-- Sign in button -->\n            <button mdbBtn color=\"info\" (click)=\"saveNew()\" block=\"true\" class=\"my-4\">\n                <ng-template [ngIf]=\"updateMode\">\n                    Update\n                </ng-template>\n                <ng-template [ngIf]=\"!updateMode\">\n                    Add\n                </ng-template>\n            </button>\n\n\n        </form>\n    </div>\n    <div>\n        <table class=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Birthday</th>\n                    <th></th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of teachers; index as i;\">\n                    <th>{{i+1}}</th>\n                    <td>{{item.name}}</td>\n                    <td>{{item.birthDate}}</td>\n                    <td><button (click)=\"enableUpdate(item)\">Update</button></td>\n                        <td><button (click)=\"delete(item)\">Delete</button></td>\n\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport HttpService from '../api-srevice';\nimport { Enrollment, Student, Subject } from '../models/teacher-model';\n\n@Component({\n  selector: 'app-grade',\n  templateUrl: './grade.component.html',\n  styleUrls: ['./grade.component.css']\n})\nexport class GradeComponent implements OnInit {\n\n  grades : Enrollment[];\n  students: Student[];\n  subjects: Subject[];\n\n  selectecSubject: number;\n  selectecStudent: number;\n\n  selectedScore : number;\n\n  constructor(private service: HttpService) { }\n\n  ngOnInit(): void {\n    this.refresh();\n    this.getStudents();\n    this.getSubjects();\n  }\n\n  delete(item: Enrollment){\n    this.service.deleteEnrollment(item.id).subscribe(r=> this.refresh());\n  }\n\n  refresh(){\n    this.service.getAllEnrollments().subscribe(r => {\n     \n      this.grades = r;\n    });\n  }\n\n  saveNew(){\n    if(this.selectecStudent && this.selectecSubject){\n      this.service.saveNewEnrollment(this.selectecStudent, this.selectecSubject).subscribe(r => {\n     \n        this.refresh();\n  \n      });\n    }\n  }\n\n  addScore(item : Enrollment){\n    item.score = this.selectedScore;\n    this.service.updateScore(item).subscribe(r => {\n     \n      this.refresh();\n\n    });\n  }\n\n  getStudents(){\n    this.service.getAllStudents().subscribe(r => {\n     \n      this.students = r;\n    });\n  }\n\n  getSubjects(){\n    this.service.getAllSubjects().subscribe(r => {\n     \n      this.subjects = r;\n    });\n  }\n\n\n}\n","<div class=\"container\" style=\"margin-top: 70px;\">\n\n    <form class=\"text-center border border-light p-5\">\n        <label class=\"form-label\">Student:</label>\n        <select class=\"ml-2 form-select form-select-lg\" name=\"selectecStudent\" [(ngModel)]=\"selectecStudent\">\n            <option *ngFor=\"let c of students\" [value]=\"c.id\">{{c.name}}</option>\n         </select>`\n\n         <label class=\"form-label\">Subject:</label>\n         <select class=\"ml-2 form-select form-select-lg\" name=\"selectedSubject\" [(ngModel)]=\"selectecSubject\">\n             <option *ngFor=\"let c of subjects\" [value]=\"c.id\">{{c.course}}</option>\n          </select>\n\n          <button mdbBtn color=\"info\"  (click)=\"saveNew()\" block=\"true\" class=\"ml-2 my-4\">\n             Add\n        </button>\n\n    </form>\n\n    <table class=\"table table-hover\">\n        <thead>\n            <tr>\n                <th>#</th>\n                <th>score</th>\n                <th>student</th>\n                <th>course</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of grades; index as i;\">\n                <th>{{i+1}}</th>\n                <td>\n                    <span *ngIf=\"item.score != 0 \"> {{item.score}}</span>\n                    <input size=\"2\" *ngIf=\"item.score == 0\" type=\"text\" [(ngModel)]=\"selectedScore\" name=\"score\"/>\n                    <button *ngIf=\"item.score == 0\"  (click)=\"addScore(item)\">Add Score</button>\n                </td>\n                <td>{{item.student}}</td>\n                <td>{{item.course}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Enrollment, Teacher,Course, Subject, Student } from './models/teacher-model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport default class HttpService {\r\n\r\n  public API = environment.api;\r\n  public Teacher_API = `${this.API}/Teacher/`;\r\n  public Student_API = `${this.API}/Student/`;\r\n  public Courses_API = `${this.API}/Course/`;\r\n  public Subjects_API = `${this.API}/Subject/`;\r\n  public Enrollment_API = `${this.API}/Enrollment/`;\r\n\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllTeachers(): Observable<Array<Teacher>> {\r\n    return this.http.get<Array<Teacher>>(this.Teacher_API);\r\n  }\r\n\r\n  saveTeacher(t: Teacher ){\r\n    if(t.id){\r\n      return this.http.put(this.Teacher_API, t);\r\n    }\r\n    return this.http.post(this.Teacher_API, t);\r\n  }\r\n\r\n  saveCourse(t: Course ){\r\n    if(t.id){\r\n      return this.http.put(this.Courses_API, t);\r\n    }\r\n    return this.http.post(this.Courses_API, t);\r\n  }\r\n\r\n  saveStudent(t: Student){\r\n    if(t.id){\r\n      return this.http.put(this.Student_API, t);\r\n    }\r\n    return this.http.post(this.Student_API, t);\r\n  }\r\n\r\n  saveNewSubject(selectecCourse: number, selectecTeacher: number) : Observable<any> {\r\n    return this.http.post(this.Subjects_API, {CourseId: selectecCourse, TechaerId:selectecTeacher });\r\n  }\r\n\r\n  saveNewEnrollment(student: number, subject: number) : Observable<any>{\r\n    return this.http.post(this.Enrollment_API, {StudentId: student, SubjectId: subject });\r\n\r\n  }\r\n\r\n  updateScore(item : Enrollment){\r\n    return this.http.put(this.Enrollment_API, item);\r\n\r\n  }\r\n\r\n  getAllStudents(): Observable<Array<Student>> {\r\n    return this.http.get<Array<Student>>(this.Student_API);\r\n  }\r\n\r\n  getAllCourses(): Observable<Array<Course>> {\r\n    return this.http.get<Array<Course>>(this.Courses_API);\r\n  }\r\n\r\n  \r\n  getAllSubjects(): Observable<Array<Subject>> {\r\n    return this.http.get<Array<Subject>>(this.Subjects_API);\r\n  }\r\n\r\n  getAllEnrollments(): Observable<Array<Enrollment>> {\r\n    return this.http.get<Array<Enrollment>>(this.Enrollment_API);\r\n  }\r\n\r\n  deleteCourse(id: number): Observable<any> {\r\n    return this.http.delete(`${this.Courses_API}${id}`);\r\n  }\r\n\r\n  deleteStudent(id: number): Observable<any> {\r\n    return this.http.delete(`${this.Student_API}${id}`);\r\n\r\n  }\r\n\r\n  deleteTeacher(id: number): Observable<any> {\r\n    return this.http.delete(`${this.Teacher_API}${id}`);\r\n  }\r\n\r\n  deleteSubject(id: number): Observable<any> {\r\n    return this.http.delete(`${this.Subjects_API}${id}`);\r\n  }\r\n\r\n  deleteEnrollment(id: number): Observable<any> {\r\n    return this.http.delete(`${this.Enrollment_API}${id}`);\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { CourseComponent } from './course/course.component';\nimport { GradeComponent } from './grade/grade.component';\nimport { HomeComponent } from './home/home.component';\nimport { StudentComponent } from './student/student.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { TeacherComponent } from './teacher/teacher.component';\n\nconst routes: Routes = [ { path: '', component: HomeComponent, pathMatch: 'full' },\n{ path: 'Teacher', component: TeacherComponent },\n{ path: 'Student', component: StudentComponent },\n{ path: 'Courses', component: CourseComponent },\n{ path: 'Subjects', component: SubjectComponent },\n{ path: 'Grades', component: GradeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}